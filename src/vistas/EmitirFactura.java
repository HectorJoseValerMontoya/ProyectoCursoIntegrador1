/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import java.time.LocalDateTime;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Actividad;
import modelos.Factura;
import modelos.ValoresGlobales;
import controladores.Verificaciones;
import dao.daoActividad;
import dao.daoDetalleFactura;
import dao.daoFactura;
import java.util.ArrayList;
import java.util.List;
import modelos.DetalleFactura;
import modelos.Personal;

/**
 *
 * @author hecto
 */
public class EmitirFactura extends javax.swing.JFrame {

    /**
     * Creates new form EmitirFactura
     *
     */
    DefaultTableModel modelo;


    public EmitirFactura() {
        initComponents();
    }

    Factura factura = new Factura();
    daoActividad daoA = new daoActividad();
    List<Actividad> actividades = daoA.listarActividades();
    List<DetalleFactura> detalleFactura = new ArrayList<>();
    daoFactura daoF = new daoFactura();
    daoDetalleFactura daoDF = new daoDetalleFactura();

    //public EmitirFactura(String nomEmpleado, String cod, String area) {
    public EmitirFactura(Personal personal) {
        initComponents();

        lblDatosEmpleado.setText("Nombre empleado: " + personal.getNombreEmpleado() + "Apellido empleado: " + personal.getApellidoEmpleado() + "           Código: " + personal.getCodFichaEmpleado() + "           Área: " + personal.getAreaEmpleado());

        //factura.setCodEmpleado(personal.getCodEmpeado());
        factura.setCodEmpleado(ValoresGlobales.personalDatosEmpleado.getCodEmpeado());
        factura.setCodFactura(daoF.siguienteFactura());
        

        modelo = (DefaultTableModel) tablaFactura.getModel();

        comboActividad.addItem("Seleccione actividad.");

        for (Actividad act : actividades) {
            comboActividad.addItem(act.getCodNombreActividad());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaFactura = new javax.swing.JTable();
        comboActividad = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblDatosEmpleado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtCantidad = new javax.swing.JTextField();
        lblCostoUnitario = new javax.swing.JLabel();
        btnTerminarFactura = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblCostoTotalDeTodo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablaFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Act", "Descripción", "Cantidad", "Costo /U", "Costo /Total"
            }
        ));
        tablaFactura.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaFactura.setEnabled(false);
        jScrollPane1.setViewportView(tablaFactura);
        if (tablaFactura.getColumnModel().getColumnCount() > 0) {
            tablaFactura.getColumnModel().getColumn(1).setPreferredWidth(350);
            tablaFactura.getColumnModel().getColumn(4).setPreferredWidth(180);
        }

        comboActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActividadActionPerformed(evt);
            }
        });

        jLabel1.setText("Actividad:");

        lblDatosEmpleado.setText("Nombre empleado:");

        jLabel2.setText("Cantidad:");

        jLabel3.setText("Costro unitario:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnTerminarFactura.setText("Terminar");
        btnTerminarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarFacturaActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");

        jLabel4.setText("Costo Total: ");

        lblCostoTotalDeTodo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                            .addComponent(btnTerminarFactura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatosEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCostoTotalDeTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboActividad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCostoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDatosEmpleado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCostoUnitario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnCerrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCostoTotalDeTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnTerminarFactura)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private double actualizarCostoTotal() {
        double costoTotal = 0;

        for (DetalleFactura df : detalleFactura) {
            costoTotal += df.getCostoSubtotal();
        }

        return costoTotal;
    }

    private void actualizarADetalleFactura(DetalleFactura _df) {
        for (DetalleFactura df : detalleFactura) {
            if (df.getCodActividad() == _df.getCodActividad()) {
                df.setCantidadDeActividad(df.getCantidadDeActividad() + _df.getCantidadDeActividad());
                df.setCostoSubtotal(df.getCantidadDeActividad() * actividades.get(df.getCodActividad() - 1).getPrecioUnitarioActividad());
            }
        }
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Verificaciones verificar = new Verificaciones();
        if (comboActividad.getSelectedIndex() != 0 && verificar.esEnteroLargo(txtCantidad.getText()) && Integer.parseInt(txtCantidad.getText()) > 0) {

            modelo.setRowCount(0);

            DetalleFactura detalleFact = new DetalleFactura();

            detalleFact.setCodDetalleFactura(daoDF.siguienteDetalleFactura());
            detalleFact.setCodFactura(factura.getCodFactura());
            detalleFact.setCodActividad(actividades.get(comboActividad.getSelectedIndex() - 1).getCodActividad());
            detalleFact.setCantidadDeActividad(Long.parseLong(txtCantidad.getText()));
            detalleFact.setCostoSubtotal(detalleFact.getCantidadDeActividad() * actividades.get(comboActividad.getSelectedIndex() - 1).getPrecioUnitarioActividad());

            boolean encontrado = false;

            for (DetalleFactura df : detalleFactura) {
                if (df.getCodActividad() == detalleFact.getCodActividad()) {
                    actualizarADetalleFactura(detalleFact);
                    encontrado = true;
                }
            }

            if (!encontrado) {
                detalleFactura.add(detalleFact);
            }

            modelo.setRowCount(0);
            for (DetalleFactura df : detalleFactura) {
                String[] arreglo = new String[5];

                arreglo[0] = daoA.buscarActividad(df.getCodActividad()).getCodNombreActividad();
                arreglo[1] = actividades.get(df.getCodActividad() - 1).getDescripcionActividad();
                arreglo[2] = String.valueOf(df.getCantidadDeActividad());
                arreglo[3] = String.valueOf(actividades.get(df.getCodActividad() - 1).getPrecioUnitarioActividad());
                arreglo[4] = String.valueOf(df.getCostoSubtotal());

                modelo.addRow(arreglo);
            }

            tablaFactura.setModel(modelo);

            lblCostoTotalDeTodo.setText(String.valueOf(actualizarCostoTotal()));

            txtCantidad.setText("");
            lblCostoUnitario.setText("");
            comboActividad.setSelectedIndex(0);

        } else {
            JOptionPane.showMessageDialog(this, "Falta indicar campos");
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    private void comboActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActividadActionPerformed
        int pos = comboActividad.getSelectedIndex() - 1;
        try {
            lblCostoUnitario.setText(String.valueOf(actividades.get(pos).getPrecioUnitarioActividad()));
        } catch (Exception ex) {
            comboActividad.setSelectedIndex(0);
            lblCostoUnitario.setText("");
        }
    }//GEN-LAST:event_comboActividadActionPerformed


    private void btnTerminarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarFacturaActionPerformed

        factura.setCostoTotal(actualizarCostoTotal());
        factura.setFechaFactura(LocalDateTime.now().toLocalDate().toString());
        factura.setHoraFactura(LocalDateTime.now().toLocalTime().toString());

        daoF.insertarFactura(factura);
        daoDF.insertarDetalleFactura(detalleFactura);

        FacturaTerminada factTerm = new FacturaTerminada(factura.getCodFactura());
        factTerm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTerminarFacturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmitirFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmitirFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmitirFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmitirFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmitirFactura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnTerminarFactura;
    private javax.swing.JComboBox<String> comboActividad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCostoTotalDeTodo;
    private javax.swing.JLabel lblCostoUnitario;
    private javax.swing.JLabel lblDatosEmpleado;
    private javax.swing.JTable tablaFactura;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
