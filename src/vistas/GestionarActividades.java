/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import dao.daoActividad;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Actividad;

/**
 *
 * @author HJVM
 */
public class GestionarActividades extends javax.swing.JFrame {

    DefaultTableModel modelo;
    daoActividad daoA = new daoActividad();
    Actividad aEscogida = null;

    /**
     * Creates new form GestionarActividades
     */
    public GestionarActividades() {
        initComponents();
        btnActualizar.setVisible(false);
        actualizarTabla();
    }

    private void actualizarTabla() {
        modelo = (DefaultTableModel) tablaActividades.getModel();

        modelo.setRowCount(0);

        for (Actividad actividades : daoA.listarActividades()) {
            String[] datosParaTabla = new String[4];
            datosParaTabla[0] = String.valueOf(actividades.getCodActividad());
            datosParaTabla[1] = actividades.getCodNombreActividad();
            datosParaTabla[2] = String.valueOf(actividades.getPrecioUnitarioActividad());
            datosParaTabla[3] = actividades.getDescripcionActividad();

            modelo.addRow(datosParaTabla);
        }

        tablaActividades.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregarActividad = new javax.swing.JButton();
        btnEliminarActividad = new javax.swing.JButton();
        btnActualizarActividades = new javax.swing.JButton();
        btnActualizarTablaActividades = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaActividades = new javax.swing.JTable();
        txtNombreActividad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPrecioUnitario = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblNumeroActividadActualizar = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAgregarActividad.setText("Agregar Actividad");
        btnAgregarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActividadActionPerformed(evt);
            }
        });

        btnEliminarActividad.setText("Eliminar Actividad");
        btnEliminarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActividadActionPerformed(evt);
            }
        });

        btnActualizarActividades.setText("Actualizar Actividades");
        btnActualizarActividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActividadesActionPerformed(evt);
            }
        });

        btnActualizarTablaActividades.setText("Actualizar Tabla Actividades");
        btnActualizarTablaActividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTablaActividadesActionPerformed(evt);
            }
        });

        tablaActividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Actividad", "Nombre Actividad", "Precio Unitario", "Descripción Actividad"
            }
        ));
        tablaActividades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaActividadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaActividades);

        jLabel1.setText("Nombre Actividad");

        jLabel2.setText("Precio Unitario");

        jLabel3.setText("Descripción Actividad");

        jLabel4.setText("Código de la Actividad a actualizar: ");

        lblNumeroActividadActualizar.setText("Ninguno");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarActividad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarActividad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizarActividades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizarTablaActividades))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtDescripcion))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNumeroActividadActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarActividad)
                    .addComponent(btnEliminarActividad)
                    .addComponent(btnActualizarActividades)
                    .addComponent(btnActualizarTablaActividades))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblNumeroActividadActualizar)
                    .addComponent(btnActualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActividadActionPerformed
        AgregarActividad aa = new AgregarActividad();
        aa.setVisible(true);
    }//GEN-LAST:event_btnAgregarActividadActionPerformed

    private void btnEliminarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActividadActionPerformed
        if (aEscogida != null) {
            int cod = Integer.parseInt(modelo.getValueAt(tablaActividades.getSelectedRow(), 0).toString());
            daoA.eliminarActividad(cod);
            actualizarTabla();
            clearEdit();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha escogido una Actividad a eliminar");
        }
    }//GEN-LAST:event_btnEliminarActividadActionPerformed

    private void btnActualizarActividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActividadesActionPerformed
        if (aEscogida != null) {
            int cod = Integer.parseInt(modelo.getValueAt(tablaActividades.getSelectedRow(), 0).toString());
            lblNumeroActividadActualizar.setText(String.valueOf(cod));
            txtNombreActividad.setText(modelo.getValueAt(tablaActividades.getSelectedRow(), 1).toString());
            txtPrecioUnitario.setText(modelo.getValueAt(tablaActividades.getSelectedRow(), 2).toString());
            txtDescripcion.setText(modelo.getValueAt(tablaActividades.getSelectedRow(), 3).toString());

            btnActualizar.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Actividad a actualizar.");
        }
    }//GEN-LAST:event_btnActualizarActividadesActionPerformed

    private void btnActualizarTablaActividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTablaActividadesActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_btnActualizarTablaActividadesActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int cod = Integer.parseInt(lblNumeroActividadActualizar.getText());
        Actividad a = new Actividad(cod, txtNombreActividad.getText(), Double.parseDouble(txtPrecioUnitario.getText()), txtDescripcion.getText());
        if (!daoA.existeActividadDiferenteALaActual(a)) {
            daoA.actualizarActividad(a, cod);
            clearEdit();
            actualizarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "El código del nombre de la actividad ya existe.");
            txtNombreActividad.requestFocus();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tablaActividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaActividadesMouseClicked
        //JOptionPane.showMessageDialog(this, tablaActividades.getSelectedRow());
        aEscogida = daoA.buscarActividad(modelo.getValueAt(tablaActividades.getSelectedRow(), 1).toString());
        lblNumeroActividadActualizar.setText(String.valueOf(aEscogida.getCodActividad()));
    }//GEN-LAST:event_tablaActividadesMouseClicked

    private void clearEdit() {
        lblNumeroActividadActualizar.setText("Ninguno");
        txtNombreActividad.setText("");
        txtPrecioUnitario.setText("");
        txtDescripcion.setText("");

        btnActualizar.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarActividades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarActividades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarActividades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarActividades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarActividades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizarActividades;
    private javax.swing.JButton btnActualizarTablaActividades;
    private javax.swing.JButton btnAgregarActividad;
    private javax.swing.JButton btnEliminarActividad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNumeroActividadActualizar;
    private javax.swing.JTable tablaActividades;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombreActividad;
    private javax.swing.JTextField txtPrecioUnitario;
    // End of variables declaration//GEN-END:variables
}
